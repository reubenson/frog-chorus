// postcss.config.js
import tailwindcss from "file:///Users/reubenson/Projects/frog-chorus/node_modules/tailwindcss/lib/index.js";
import nesting from "file:///Users/reubenson/Projects/frog-chorus/node_modules/tailwindcss/nesting/index.js";

// tailwind.config.js
var tailwind_config_default = {
  plugins: [],
  theme: {
    letterSpacing: {
      tighter: -"0.05em",
      tight: -"0.025em",
      normal: "0em",
      wide: "0.025em",
      wider: "0.05em",
      widest: "0.4em",
    },
    extend: {},
  },
  content: ["./src/**/*.{svelte,js,ts}"],
  // for unused CSS
  variants: {
    extend: {},
  },
};

// postcss.config.js
import autoprefixer from "file:///Users/reubenson/Projects/frog-chorus/node_modules/autoprefixer/lib/autoprefixer.js";
var postcss_config_default = {
  plugins: [tailwindcss(tailwind_config_default), autoprefixer, nesting],
};

// vite.config.ts
import { defineConfig } from "file:///Users/reubenson/Projects/frog-chorus/node_modules/vite/dist/node/index.js";
import { svelte } from "file:///Users/reubenson/Projects/frog-chorus/node_modules/@sveltejs/vite-plugin-svelte/dist/index.js";
var vite_config_default = defineConfig({
  plugins: [svelte()],
  build: {
    outDir: "./docs",
  },
  css: {
    postcss: postcss_config_default,
  },
});
export { vite_config_default as default };
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsicG9zdGNzcy5jb25maWcuanMiLCAidGFpbHdpbmQuY29uZmlnLmpzIiwgInZpdGUuY29uZmlnLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL1VzZXJzL3JldWJlbnNvbi9Qcm9qZWN0cy9mcm9nLWNob3J1c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL1VzZXJzL3JldWJlbnNvbi9Qcm9qZWN0cy9mcm9nLWNob3J1cy9wb3N0Y3NzLmNvbmZpZy5qc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vVXNlcnMvcmV1YmVuc29uL1Byb2plY3RzL2Zyb2ctY2hvcnVzL3Bvc3Rjc3MuY29uZmlnLmpzXCI7aW1wb3J0IHRhaWx3aW5kY3NzIGZyb20gJ3RhaWx3aW5kY3NzJztcbmltcG9ydCBuZXN0aW5nIGZyb20gJ3RhaWx3aW5kY3NzL25lc3RpbmcnO1xuaW1wb3J0IHRhaWx3aW5kQ29uZmlnIGZyb20gJy4vdGFpbHdpbmQuY29uZmlnLmpzJ1xuaW1wb3J0IGF1dG9wcmVmaXhlciBmcm9tICdhdXRvcHJlZml4ZXInXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcGx1Z2luczogW1xuICAgIHRhaWx3aW5kY3NzKHRhaWx3aW5kQ29uZmlnKSxcbiAgICBhdXRvcHJlZml4ZXIsXG4gICAgbmVzdGluZ1xuICBdXG59XG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9Vc2Vycy9yZXViZW5zb24vUHJvamVjdHMvZnJvZy1jaG9ydXNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy9yZXViZW5zb24vUHJvamVjdHMvZnJvZy1jaG9ydXMvdGFpbHdpbmQuY29uZmlnLmpzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9Vc2Vycy9yZXViZW5zb24vUHJvamVjdHMvZnJvZy1jaG9ydXMvdGFpbHdpbmQuY29uZmlnLmpzXCI7ZXhwb3J0IGRlZmF1bHQge1xuICBwbHVnaW5zOiBbXSxcbiAgdGhlbWU6IHtcbiAgICBsZXR0ZXJTcGFjaW5nOiB7XG4gICAgICB0aWdodGVyOiAtJzAuMDVlbScsXG4gICAgICB0aWdodDogLScwLjAyNWVtJyxcbiAgICAgIG5vcm1hbDogJzBlbScsXG4gICAgICB3aWRlOiAnMC4wMjVlbScsXG4gICAgICB3aWRlcjogJzAuMDVlbScsXG4gICAgICB3aWRlc3Q6ICcwLjRlbSdcbiAgICB9LFxuICAgIGV4dGVuZDoge30sXG4gIH0sXG4gIGNvbnRlbnQ6IFsnLi9zcmMvKiovKi57c3ZlbHRlLGpzLHRzfSddLCAvLyBmb3IgdW51c2VkIENTU1xuICB2YXJpYW50czoge1xuICAgIGV4dGVuZDoge30sXG4gIH0sXG59XG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9Vc2Vycy9yZXViZW5zb24vUHJvamVjdHMvZnJvZy1jaG9ydXNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy9yZXViZW5zb24vUHJvamVjdHMvZnJvZy1jaG9ydXMvdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL1VzZXJzL3JldWJlbnNvbi9Qcm9qZWN0cy9mcm9nLWNob3J1cy92aXRlLmNvbmZpZy50c1wiOy8vIGNvbmZpZ3VyYXRpb24gbm90ZXMgdGFrZW4gZnJvbSBodHRwczovL21lZGl1bS5jb20vQG1kd2lreWNhaHlvL2hvdy10by1zZXQtdXAtc3ZlbHRlLXVzaW5nLXZpdGUtYW5kLXRhaWx3aW5kLWNzcy02MTcwNDBlYmNjZWNcblxuaW1wb3J0IHBvc3Rjc3MgZnJvbSAnLi9wb3N0Y3NzLmNvbmZpZy5qcyc7XG5pbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tICd2aXRlJztcbmltcG9ydCB7IHN2ZWx0ZSB9IGZyb20gJ0BzdmVsdGVqcy92aXRlLXBsdWdpbi1zdmVsdGUnO1xuXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcbiAgcGx1Z2luczogW3N2ZWx0ZSgpXSxcbiAgYnVpbGQ6IHtcbiAgICBvdXREaXI6ICcuL2RvY3MnXG4gIH0sXG4gIGNzczoge1xuICAgIHBvc3Rjc3NcbiAgfVxufSk7XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQXVTLE9BQU8saUJBQWlCO0FBQy9ULE9BQU8sYUFBYTs7O0FDRHFSLElBQU8sMEJBQVE7QUFBQSxFQUN0VCxTQUFTLENBQUM7QUFBQSxFQUNWLE9BQU87QUFBQSxJQUNMLGVBQWU7QUFBQSxNQUNiLFNBQVMsQ0FBQztBQUFBLE1BQ1YsT0FBTyxDQUFDO0FBQUEsTUFDUixRQUFRO0FBQUEsTUFDUixNQUFNO0FBQUEsTUFDTixPQUFPO0FBQUEsTUFDUCxRQUFRO0FBQUEsSUFDVjtBQUFBLElBQ0EsUUFBUSxDQUFDO0FBQUEsRUFDWDtBQUFBLEVBQ0EsU0FBUyxDQUFDLDJCQUEyQjtBQUFBO0FBQUEsRUFDckMsVUFBVTtBQUFBLElBQ1IsUUFBUSxDQUFDO0FBQUEsRUFDWDtBQUNGOzs7QURkQSxPQUFPLGtCQUFrQjtBQUV6QixJQUFPLHlCQUFRO0FBQUEsRUFDYixTQUFTO0FBQUEsSUFDUCxZQUFZLHVCQUFjO0FBQUEsSUFDMUI7QUFBQSxJQUNBO0FBQUEsRUFDRjtBQUNGOzs7QUVSQSxTQUFTLG9CQUFvQjtBQUM3QixTQUFTLGNBQWM7QUFHdkIsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUFBLEVBQ2xCLE9BQU87QUFBQSxJQUNMLFFBQVE7QUFBQSxFQUNWO0FBQUEsRUFDQSxLQUFLO0FBQUEsSUFDSDtBQUFBLEVBQ0Y7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
